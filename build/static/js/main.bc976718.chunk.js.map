{"version":3,"sources":["components/InputForm.js","components/PackageList.js","components/PackageView.js","components/Notification.js","components/FilterForm.js","App.js","index.js"],"names":["InputForm","inputData","setInputData","setPackages","setErrorMessage","parseData","length","setTimeout","dataObject","content","axios","post","then","response","data","Form","onSubmit","event","preventDefault","Control","style","marginBottom","backgroundColor","placeholder","as","value","onChange","target","Button","variant","type","className","marginLeft","onClick","get","PackageList","list","setCurrentPackage","disabled","filter","undefined","pckge","includes","justifyContent","display","flexWrap","sort","map","key","PackageView","currentPackage","packages","packageInfo","dependencies","reverseDependencies","description","unavailable","h2Style","whiteSpace","h3Style","marginTop","float","Notification","message","FilterForm","setFilter","App","useState","errorMessage","Object","entries","keys","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bc976718.chunk.js","sourcesContent":["import React from 'react'\nimport axios from 'axios'\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\n\nconst InputForm = ({\n  inputData,\n  setInputData,\n  setPackages,\n  setErrorMessage\n}) => {\n  const formHandler = event => {\n    event.preventDefault()\n    parseData()\n  }\n\n  const validate = () => {\n    if (inputData.length === 0) {\n      setErrorMessage('Input cannot be empty')\n      setTimeout(() => {\n        setErrorMessage('')\n      }, 5000)\n      return true\n    }\n    return false\n  }\n\n  var parseData = () => {\n    if (validate()) return\n\n    const dataObject = {\n      content: inputData\n    }\n\n    axios.post('/api/parse', dataObject).then(response => {\n      setPackages(response.data)\n    })\n  }\n\n  const handleDataChange = event => {\n    setInputData(event.target.value)\n  }\n  const useSampleData = () => {\n    axios.get('/api/sample').then(response => {\n      setPackages(response.data)\n    })\n  }\n\n  const InputField = {\n    marginBottom: '10px',\n    backgroundColor: '#A1B0BC'\n  }\n\n  const sampleButton = {\n    marginLeft: '10px'\n  }\n\n  return (\n    <div>\n      <Form onSubmit={formHandler}>\n        <div>\n          <Form.Control\n            style={InputField}\n            placeholder=\"Insert contents of /var/lib/dpkg/status\"\n            as=\"textarea\"\n            value={inputData}\n            onChange={handleDataChange}\n          />\n        </div>\n        <div>\n          <Button variant=\"dark\" type=\"submit\">\n            Analyze\n          </Button>{' '}\n          ..... or\n          <Button\n            className=\"sampleButton\"\n            style={sampleButton}\n            variant=\"dark\"\n            onClick={useSampleData}\n          >\n            Use sample data\n          </Button>\n        </div>\n      </Form>\n    </div>\n  )\n}\n\nexport default InputForm\n","import React from 'react'\nimport Button from 'react-bootstrap/Button'\n\nconst PackageList = ({ list, setCurrentPackage, disabled, filter }) => {\n  if (disabled === undefined) {\n    disabled = false\n  }\n\n  if (filter) {\n    list = list.filter(pckge => pckge.includes(filter))\n  }\n  const containerStyle = {\n    justifyContent: 'flex-start',\n    display: 'flex',\n    flexWrap: 'wrap'\n  }\n\n  const rows = () =>\n    list.sort().map(pckge => (\n      <Button\n        variant=\"dark\"\n        // style={packageStyle}\n        key={pckge}\n        onClick={() => setCurrentPackage(pckge)}\n        disabled={disabled}\n      >\n        {pckge}\n      </Button>\n    ))\n\n  return <div style={containerStyle}>{rows()}</div>\n}\n\nexport default PackageList\n","import React from 'react'\nimport PackageList from './PackageList'\nimport Button from 'react-bootstrap/Button'\n\nconst PackageView = ({ currentPackage, packages, setCurrentPackage }) => {\n  if (currentPackage === '') return ''\n  if (packages[currentPackage] === undefined) {\n    setCurrentPackage('')\n    return ''\n  }\n  const packageInfo = packages[currentPackage]\n\n  const dependencies = packageInfo['Dependencies']\n  const reverseDependencies = packageInfo['Reverse dependencies']\n  const description = packageInfo['Description']\n  const unavailable = packageInfo['Unavailable dependencies']\n\n  const h2Style = {\n    whiteSpace: 'pre-line'\n  }\n\n  const backButton = {\n    float: 'right',\n  }\n\n  const h3Style = {\n    marginTop: '10px'\n  }\n\n  return (\n    <div>\n      <h2 style={h2Style}>{currentPackage}</h2>\n      <p>\n        <i style={h2Style}>{description}</i>\n      </p>\n\n      {(dependencies.length > 0 || unavailable.length > 0) && (\n        <h3 style={h3Style}>Dependencies</h3>\n      )}\n      <PackageList list={dependencies} setCurrentPackage={setCurrentPackage} />\n      <PackageList\n        list={unavailable}\n        setCurrentPackage={() => {}}\n        disabled={true}\n      />\n\n      {reverseDependencies.length > 0 && (\n        <h3 style={h3Style}>Reverse Dependencies</h3>\n      )}\n      <PackageList\n        list={reverseDependencies}\n        setCurrentPackage={setCurrentPackage}\n      />\n      <Button\n        style={backButton}\n        variant=\"dark\"\n        onClick={() => setCurrentPackage('')}\n      >\n        Back\n      </Button>\n    </div>\n  )\n}\n\nexport default PackageView\n","import React from 'react'\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return <div className=\"error\"><b>{message}</b></div>\n}\n\nexport default Notification\n","import React from 'react'\nimport Form from 'react-bootstrap/Form'\n\nconst FilterForm = ({ filter, setFilter }) => {\n  const handleDataChange = event => {\n    setFilter(event.target.value)\n  }\n\n  const InputField = {\n    marginBottom: '10px',\n    backgroundColor: '#A1B0BC'\n  }\n\n  return (\n    <Form>\n      <Form.Control\n        type=\"text\"\n        placeholder=\"Filter packages\"\n        value={filter}\n        onChange={handleDataChange}\n        style={InputField}\n      />\n    </Form>\n  )\n}\n\nexport default FilterForm\n","import React, { useState, useEffect } from 'react'\nimport InputForm from './components/InputForm'\nimport PackageView from './components/PackageView'\nimport PackageList from './components/PackageList'\nimport Notification from './components/Notification'\nimport FilterForm from './components/FilterForm'\n\nconst App = () => {\n  const [packages, setPackages] = useState({})\n  const [currentPackage, setCurrentPackage] = useState('')\n  const [inputData, setInputData] = useState('')\n  const [errorMessage, setErrorMessage] = useState('')\n  const [filter, setFilter] = useState('')\n\n  if (Object.entries(packages).length === 0) {\n    return (\n      <div>\n        <Notification message={errorMessage} />\n\n        <InputForm\n          inputData={inputData}\n          setInputData={setInputData}\n          setPackages={setPackages}\n          setErrorMessage={setErrorMessage}\n        />\n      </div>\n    )\n  }\n\n  if (currentPackage !== '') {\n    return (\n      <PackageView\n        currentPackage={currentPackage}\n        packages={packages}\n        setCurrentPackage={setCurrentPackage}\n      />\n    )\n  }\n  return (\n    <div>\n      <FilterForm filter={filter} setFilter={setFilter} />\n      <PackageList\n        list={Object.keys(packages)}\n        setCurrentPackage={setCurrentPackage}\n        filter={filter}\n      />\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.scss';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}